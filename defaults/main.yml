# Пример работы с массивом пользователей
#  ssh_keys - может быть как строкой с ключем так и url где находится ключ
#  configs.src - может быть как именем шаблона так и url где находится конфигурационный файл
# Не обязательные параметры:
#  state - по-умолчанию "present"
#  mode - по-умолчанию "0644"
#  shell - по-умолчанию "bash"
#
# Для нормального копирования конфигурационных файлов нужно помнить где располагаются роли,
#  путь может быть как относительный, так и абсолютный.
# Например если в ansible.cfg role_path = ./roles, то относительный путь до папки files плйбука будет таким
#  src: "../../files/file.conf"
# Для шифрования пароля можно использовать команду mkpasswd --method=sha-512
users: []
# users:
#   - login: "anny"
#     # To generate encrypted password use:
#     #  ansible all -i localhost, -m debug -a "msg={{ 'mypassword' | password_hash('sha512', 'salt') }}"
#     passwd: "OhMyPassword"
#     description: "Anny admin"
#     shell: "zsh"
#     state: present
#     ssh_keys:
#       - "https://raw.githubusercontent.com/yourepo/configs/master/anny.pub"
#       - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8.. anny@localhost"
#     dirs:
#       - dir: ".docker"
#         mode: "0644"
#       - dir: ".kube"
#     configs:
#       - src: "https://raw.githubusercontent.com/yourepo/configs/master/.zshrc"
#         dst: ".zsh"
#         mode: "0644"
#       - src: "myconfig.conf.j2"
#         dst: "myconfig"
#       - src: |
#           my_mega_plain_content
#         dst: "plain_config"
#         inline: true
#     groups:
#       - wheel
#       - docker

### Настраиваемые параметры sudoers
extra_sudoers_configs: []
# - name: "developers"
#   content: |
#     # Extra sudoers config for developers
#     dew     ALL=(ALL)   ALL
#     guesto  ALL=(ALL)   NOPASWD:/usr/local/sbin/util1

### Общие параметры пользователей
default_shell: "bash"

### Сообщение motd
# motd: ""
default_motd: |
  Welkome to {{ ansible_hostname }} server ;)

### Таймзона
# timezone: "Europe/Moscow"
default_timezone: "UTC"

### Настройки DNS
dns_servers: []
#  - 77.88.8.8 # Яндекс.DNS
#  - 8.8.8.8   # Google DNS
dns_timeout: 1

### Репозитории ПО
repositories_apt: []
# - repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
#   key: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
#   state: "present"

# TODO
# repositories_yum: []

### Софт по-умолчанию
# Списки по алфавиту
common_software:
  - bridge-utils
  - ca-certificates
  - curl
  - htop
  - jq
  - lsof
  - mc
  - openssl
  - smartmontools
  - sudo
  - sysstat
  - tar
  - unzip
  - vim
  - wget
  - zsh

common_apt_software:
  - atop
  - apt-transport-https
  - dnsutils
  - conntrack
  - iptables-persistent
  - locales
  - netfilter-persistent
  - nfs-common
  - software-properties-common

common_yum_software:
  - bind-utils
  - conntrack-tools

# Дополнительное ПО для установки на сервер
extra_software: []

# Список пакетов которым нужно запретить обновления
# Работает только с менеджером пакетов apt
locked_software: []

### Модули python
# Принудительное обновление pip
update_pip: false

# Списки по алфавиту
common_pip_software: []
extra_pip_software: []

### Настройка sysctl
sysctl: []
# - "net.core.somaxconn=65535"
# - "net.core.rmem_max=16777216"

### Настройка swap
swap_enabled: true

### Настройка locales
locales:
  - name: "en_US.UTF-8"
    state: "present"
  - name: "ru_RU.UTF-8"
    state: "present"

### Настройка дополнительных текстовых файлов
extra_dirs: []
# - path: "/etc/mongo"
#   mode: "0755"
#   owner: "root"
#   group: "root"
#   state: "present"
extra_configs: []
# - path: "/etc/cron.d/docker_clean"
#  mode: "0644"
#  owner: "root"
#  group: "root"
#  state: "present"
#  config: |
#    0 * * * * root docker system prune -f

### Настройка ntp
ntp_servers: []
ntp_servers_opts: "iburst"
# Названия сервисов синхронизации времени для разных OS
ntp_service:
  redhat: "ntpd"
  debian: "ntp"
  default: "ntp"

### Настройка мониторинга
# Пока что поддерживается только prometheus
node_exporter_enabled: false
# possible values: host, docker
node_exporter_deployment_type: "host"
node_exporter_version: 1.3.1
node_exporter_get_url: >-
  https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/
  node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
node_exporter_docker_image: "prom/node-exporter:v{{ node_exporter_version }}"
node_exporter_base_dir: "/opt/node_exporter"
node_exporter_text_collector_dir: "{{ node_exporter_base_dir }}/text_collector/"
node_exporter_listen_port: 9100
node_exporter_listen_host: ""
# Check https://github.com/prometheus/node_exporter#disabled-by-default
node_exporter_collectors:
  - logind
  - processes
  - systemd
  - systemd.enable-task-metrics
  - systemd.enable-restarts-metrics
  - systemd.enable-start-time-metrics
node_exporter_collectors_options: []

### настройка NAT
# Список правил для NAT
nat_rules: []
# - from: "192.168.0.0/24"  # обязательный параметр
#   interface: ""           # опциональный параметр. default: ansible_default_ipv4.interface
#   protocol: ""            # опциональный параметр
#   state: "absent"         # опциональный параметр

# Список правил для DNAT
dnat_rules: []
# - target: "192.168.0.1:443"  # Обязательный параметр. Куда перенаправлять трафик.
#                              # Если указывать port, то протокол обязателен
#   destination: "2.2.2.2"     # Опциональный параметр
#   port: 443
#   interface: ""
#   protocol: "tcp"
#   state: "absent"
